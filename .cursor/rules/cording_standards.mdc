---
alwaysApply: true
---

# cording_standards.mdc

## コーディング規約

- FSDの依存ルール・ディレクトリ構成を厳守
- variantやpropsで柔軟にカスタマイズできる設計を推奨
- コード分割・パフォーマンス最適化も考慮
- Remixのルート/ローダ/アクション/エラーバウンダリを適切に設計

## テスト・品質

- 必要に応じてユニットテスト・コンポーネントテストを実施
- コードレビュー・PR時のLint/Formatチェックを推奨

## Lint/Formatルール

- ESLint, Prettierを導入し、CIで強制
- import順は「外部→内部→相対パス」
- セミコロン必須、シングルクォート推奨

## 型定義の方針

- TypeScriptのstrictモードを有効化
- anyの使用禁止（例外時は理由をコメント）

## コメント・ドキュメント

- 関数・コンポーネントにはJSDocコメントを推奨
- 複雑なロジックには適宜コメントを追加
- TODO, FIXMEコメントは必ず理由を明記

## ファイル命名・配置

- FSDのレイヤーごとにディレクトリを分ける
- ファイル名・ディレクトリ名は用途・役割が直感的に分かるものにする

## PR・運用

- 仕様変更や追加があった際は該当ファイルのみ修正
- 複数人で作業する場合はコンフリクトを避けるため、粒度の細かいPRを推奨
